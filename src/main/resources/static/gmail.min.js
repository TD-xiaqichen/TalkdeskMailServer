var Gmail = function(e) {
	var u;
	if (void 0 !== e) u = e;
	else if ("undefined" != typeof jQuery) u = jQuery;
	else try {
		u = require("jquery")
	} catch(e) {}
	var t = "undefined" != typeof window ? window.opener: null;
	if (t) try {
		t.document.domain !== window.document.domain && (console.warn("GmailJS: window.opener domain differs from window domain."), t = null)
	} catch(e) {
		console.warn("GmailJS: Unable to access window.opener!", e),
		t = null
	}
	var v = {
		get: {},
		observe: {},
		check: {
			data: {}
		},
		tools: {},
		tracker: {},
		dom: {},
		chat: {},
		compose: {},
		helper: {
			get: {}
		}
	};
	function r(e = "Migrate to new API compatible with new Gmail to silence this warning!") {
		v.DISABLE_OLD_GMAIL_API_DEPRECATION_WARNINGS || console.warn("GmailJS: using deprecated API for old Gmail.", e)
	}
	v.DISABLE_OLD_GMAIL_API_DEPRECATION_WARNINGS = !1,
	v.version = "0.8.0",
	v.tracker.globals = "undefined" != typeof GLOBALS ? GLOBALS: t && t.GLOBALS || [],
	v.tracker.view_data = "undefined" != typeof VIEW_DATA ? VIEW_DATA: t && t.VIEW_DATA || [],
	v.tracker.ik = v.tracker.globals[9] || "",
	v.tracker.hangouts = void 0,
	v.cache = {},
	v.cache.debug_xhr_fetch = !1,
	v.cache.emailIdCache = {},
	v.cache.emailLegacyIdCache = {},
	v.cache.threadCache = {},
	v.get.last_active = function() {
		var e = v.tracker.globals[17][15];
		return {
			time: e[1],
			ip: e[3],
			mac_address: e[9],
			time_relative: e[10]
		}
	},
	v.get.loggedin_accounts = function() {
		var e, t, r, a = [],
		o = v.tracker.globals[17];
		for (e in o) if ("mla" === (r = o[e])[0]) {
			for (t in r[1]) a.push({
				name: r[1][t][4],
				email: r[1][t][0],
				index: r[1][t][3]
			});
			return a
		}
		return a
	},
	v.get.user_email = function() {
		return v.tracker.globals[10]
	},
	v.get.manager_email = function() {
		return v.helper.get.is_delegated_inbox() ? v.get.delegated_to_email() : v.get.user_email()
	},
	v.get.delegated_to_email = function() {
		if (!v.helper.get.is_delegated_inbox()) return null;
		var e, t, r = "/u/",
		a = window.location.pathname,
		o = parseInt(a.substring(a.indexOf(r) + r.length), 10),
		n = v.get.loggedin_accounts();
		if (n && 0 < n.length) for (e in n) if ((t = n[e]).index === o) return t.email;
		return u(".gb_rb[href$='" + r + o + "'] .gb_yb").text().split(" ")[0]
	},
	v.helper.get.is_locale = function(e) {
		if (!e || "string" != typeof e || e.length < 2) return ! 1;
		if (e.match(/[0-9]/)) return ! 1;
		e = e.slice(0, 2);
		return e.toLowerCase() === e || e.toUpperCase() === e
	},
	v.helper.filter_locale = function(e) {
		return v.helper.get.is_locale(e) ? e.substring(0, 2).toLowerCase() : null
	},
	v.helper.array_starts_with = function(e, t) {
		return !! (e && 0 < e.length && e[0] === t)
	},
	v.helper.get.array_sublist = function(e, t) {
		if (e) for (var r = 0; r < e.length; r++) {
			var a = e[r];
			if (v.helper.array_starts_with(a, t)) return a
		}
		return null
	},
	v.helper.get.locale_from_url_params = function(e) {
		if (e && e.indexOf && (0 === e.indexOf("https://") || 0 === e.indexOf("http://"))) {
			e = e.split("?");
			if (1 < e.length) for (var t = e[1].split("&"), r = 0; r < t.length; r++) {
				var a = t[r].split("=");
				if (2 === a.length && "hl" === a[0]) return a[1]
			}
		}
		return null
	},
	v.helper.get.locale_from_globals_item = function(e) {
		if (!e) return null;
		for (var t = 0; t < e.length; t++) {
			var r = e[t],
			r = v.helper.get.locale_from_url_params(r);
			if (r) return r
		}
		return e[8]
	},
	v.get.localization = function() {
		var e = v.tracker.globals,
		t = v.helper.get.array_sublist(e[17], "ui");
		if (null !== t && 8 < t.length) {
			t = v.helper.get.locale_from_globals_item(t);
			if (t = v.helper.filter_locale(t)) return t
		}
		if (null !== e[12]) {
			e = v.helper.get.locale_from_url_params(e[12]);
			if (e = v.helper.filter_locale(e)) return e
		}
		return null
	},
	v.check.is_new_data_layer = function() {
		return "true" === window.GM_SPT_ENABLED
	},
	v.check.is_new_gui = function() {
		return "true" === window.GM_RFT_ENABLED
	},
	v.check.is_thread = function() {
		var e = u(".nH .if").children(":eq(1)").children().children(":eq(1)").children(),
		t = v.get.email_ids();
		return 1 < e.length || 1 < t.length
	},
	v.dom.inbox_content = function() {
		return u("div[role=main]:first")
	},
	v.check.is_preview_pane = function() {
		var e = v.dom.inbox_content().find("[gh=tl]"),
		t = !1;
		return e.each(function() {
			u(this).hasClass("aia") && (t = !0)
		}),
		t
	},
	v.check.is_multiple_inbox = function() {
		return 1 < v.dom.inboxes().length
	},
	v.check.is_horizontal_split = function() {
		return 0 === v.dom.inbox_content().find("[gh=tl]").find(".nn").length
	},
	v.check.is_vertical_split = function() {
		return ! 1 === v.check.is_horizontal_split()
	},
	v.check.is_tabbed_inbox = function() {
		return 1 === u(".aKh").length
	},
	v.check.is_right_side_chat = function() {
		var e = u(".ApVoH");
		return 0 !== e.length && ":wf" === e[0].getAttribute("aria-labelledby")
	},
	v.check.should_compose_fullscreen = function() {
		console.warn("gmail.js: This function is known to be unreliable, and may be deprecated in a future release.");
		var t = [];
		try {
			t = v.tracker.globals[17][4][1][32]
		} catch(e) {
			t = ["bx_scfs", "false"]
		}
		return "true" === t[1]
	},
	v.check.is_google_apps_user = function() {
		var e = v.get.user_email();
		return - 1 === e.indexOf("gmail.com", e.length - "gmail.com".length)
	},
	v.get.storage_info = function() {
		var e = document.querySelector(".md.mj div"),
		t = e.querySelectorAll("span")[0].textContent.replace(/,/g, "."),
		r = e.querySelectorAll("span")[1].textContent.replace(/,/g, "."),
		e = 100 * parseFloat(t.replace(/[^0-9\.]/g, "")) / parseFloat(r.replace(/[^0-9\.]/g, ""));
		return {
			used: t,
			total: r,
			percent: Math.floor(e)
		}
	},
	v.dom.inboxes = function() {
		return v.dom.inbox_content().find("[gh=tl]")
	},
	v.dom.email_subject = function() {
		for (var e = u(".hP"), t = 0; t < e.length; t++) if (u(e[t]).is(":visible")) return u(e[t]);
		return u()
	},
	v.get.email_subject = function() {
		return v.dom.email_subject().text()
	},
	v.dom.email_body = function() {
		return u(".nH.hx")
	},
	v.dom.toolbar = function() {
		for (var e = u("[gh='mtb']"); 1 === u(e).children().length;) e = u(e).children().first();
		return e
	},
	v.dom.right_toolbar = function() {
		for (var e = u("[gh='tm'] [gh='s']").parent(); 1 === u(e).children().length;) e = u(e).children().first();
		return e
	},
	v.check.is_inside_email = function() {
		if ("email" !== v.get.current_page() && !v.check.is_preview_pane()) return ! 1;
		for (var e = u(".ii.gt .a3s"), t = [], r = 0; r < e.length; r++) {
			var a = e[r].getAttribute("class").split(" ")[2];
			"undefined" !== a && void 0 !== a && t.push(e[r])
		}
		return 0 < t.length
	},
	v.check.is_plain_text = function() {
		for (var e = v.tracker.globals[17][4][1], t = 0; t < e.length; t++) {
			var r = e[t];
			if ("bx_cm" === r[0]) return "0" === r[1]
		}
		return ! 1
	},
	v.dom.email_contents = function() {
		for (var e = u(".ii.gt div.a3s.aXjCH"), t = [], r = 0; r < e.length; r++) {
			var a = e[r].getAttribute("class").split(" ")[2],
			o = e[r].getAttribute("contenteditable");
			"undefined" !== a && void 0 !== a && "true" !== o && t.push(e[r])
		}
		return t
	},
	v.get.email_ids = function() {
		if (r(), v.check.is_inside_email()) {
			var e = v.get.email_data();
			return Object.keys(e.threads)
		}
		return []
	},
	v.get.compose_ids = function() {
		for (var e = [], t = u(".M9 [name=draft]"), r = 0; r < t.length; r++)"undefined" !== t[r].value && e.push(t[r].value);
		return e
	},
	v.get.thread_id = function() {
		r();
		var e = document.querySelector("h2[data-legacy-thread-id]");
		if (null !== e) return e.dataset.legacyThreadId
	},
	v.get.email_id = function() {
		return r(),
		v.get.thread_id()
	},
	v.check.is_priority_inbox = function() {
		return 0 < u(".qh").length
	},
	v.check.is_rapportive_installed = function() {
		return 1 === u("#rapportive-sidebar").length
	},
	v.check.is_streak_installed = function() {
		return 0 < u("[id^='bentoBox'],[id*=' bentoBox'],[class*=' bentoBox'],[class*='bentoBox']").length
	},
	v.check.is_anydo_installed = function() {
		return 0 < u("[id^='anydo'],[id*=' anydo'],[class*=' anydo'],[class*='anydo']").length
	},
	v.check.is_boomerang_installed = function() {
		return 0 < u("[id^='b4g_'],[id*=' b4g_'],[class*=' b4g_'],[class*='b4g_']").length
	},
	v.check.is_xobni_installed = function() {
		return 0 < u("#xobni_frame").length
	},
	v.check.is_signal_installed = function() {
		return 0 < u("[id^='Signal'],[id*=' Signal'],[class*=' signal'],[class*='signal']").length
	},
	v.check.are_shortcuts_enabled = function() {
		for (var e = void 0,
		t = !0,
		r = v.tracker.globals[17][4][1], a = 0; a < r.length; a++) {
			var o = r[a];
			if ("bx_hs" === o[0]) {
				e = o[1];
				break
			}
		}
		return void 0 !== e && (t = {
			0 : !0,
			1 : !1
		} [e]),
		t
	},
	v.dom.get_left_sidebar_links = function() {
		return u("div[role=navigation] [title]")
	},
	v.dom.header = function() {
		return u("#gb")
	},
	v.dom.search_bar = function() {
		return u("[gh=sb]")
	},
	v.get.search_query = function() {
		return v.dom.search_bar().find("input")[0].value
	},
	v.get.unread_inbox_emails = function() {
		return v.helper.get.navigation_count("inbox")
	},
	v.get.unread_draft_emails = function() {
		return v.helper.get.navigation_count("drafts")
	},
	v.get.unread_spam_emails = function() {
		return v.helper.get.navigation_count("spam")
	},
	v.get.unread_forum_emails = function() {
		return v.helper.get.navigation_count("forums")
	},
	v.get.unread_update_emails = function() {
		return v.helper.get.navigation_count("updates")
	},
	v.get.unread_promotion_emails = function() {
		return v.helper.get.navigation_count("promotions")
	},
	v.get.unread_social_emails = function() {
		return v.helper.get.navigation_count("social_updates")
	},
	v.helper.get.navigation_count = function(e) {
		e = v.tools.i18n(e);
		const t = u("div[role=navigation]").find("[title*='" + e + "']");
		if ((t || 0 < t.length) && -1 !== t[0].title.indexOf(e)) {
			e = parseInt(t[0].attributes["aria-label"].value.replace(/[^0-9]/g, ""));
			if (!isNaN(e)) return e
		}
		return 0
	},
	v.get.beta = function() {
		return {
			new_nav_bar: 0 === u("#gbz").length
		}
	},
	v.get.unread_emails = function() {
		return {
			inbox: v.get.unread_inbox_emails(),
			drafts: v.get.unread_draft_emails(),
			spam: v.get.unread_spam_emails(),
			forum: v.get.unread_forum_emails(),
			update: v.get.unread_update_emails(),
			promotions: v.get.unread_promotion_emails(),
			social: v.get.unread_social_emails()
		}
	},
	v.tools.error = function(e) {
		if (!console) throw e;
		console.error(e)
	},
	v.tools.parse_url = function(e) {
		for (var t = /[?&]([^=#]+)=([^&#]*)/g,
		r = {},
		a = t.exec(e); a;) r[a[1]] = a[2],
		a = t.exec(e);
		return r
	},
	v.tools.sleep = function(e) {
		for (var t = (new Date).getTime(); ! ((new Date).getTime() - t > e););
	},
	v.tools.multitry = function(e, t, r, a, o, n) {
		if (void 0 !== o && t <= o) return n;
		o = void 0 === o ? 0 : o;
		n = r();
		if (a(n)) return n;
		v.tools.sleep(e),
		v.tools.multitry(e, t, r, a, o + 1, n)
	},
	v.tools.deparam = function(e, l) {
		var c = Array.isArray ||
		function(e) {
			return "[object Array]" === Object.prototype.toString.call(e)
		},
		d = {},
		u = {
			true: !0,
			false: !1,
			null: null
		};
		return function(e, t) {
			for (var r = [], a = 0; a < e.length; a++) r.push(t(e[a]))
		} (e.replace(/\+/g, " ").split("&"),
		function(e, t) {
			var r, e = e.split("="),
			a = decodeURIComponent(e[0]),
			o = d,
			n = 0,
			i = a.split("]["),
			s = i.length - 1,
			s = /\[/.test(i[0]) && /\]$/.test(i[s]) ? (i[s] = i[s].replace(/\]$/, ""), (i = i.shift().split("[").concat(i)).length - 1) : 0;
			if (2 === e.length) if (r = decodeURIComponent(e[1]), l && (r = r && !isNaN(r) ? +r: "undefined" === r ? void 0 : void 0 !== u[r] ? u[r] : r), s) for (; n <= s; n++) o = o[a = "" === i[n] ? o.length: i[n]] = n < s ? o[a] || (i[n + 1] && isNaN(i[n + 1]) ? {}: []) : r;
			else c(d[a]) ? d[a].push(r) : void 0 !== d[a] ? d[a] = [d[a], r] : d[a] = r;
			else a && (d[a] = l ? void 0 : "")
		}),
		d
	},
	v.tools.get_pathname_from_url = function(e) {
		if ("undefined" == typeof document) return e; {
			const t = document.createElement("a");
			return t.href = e,
			t.pathname
		}
	},
	v.tools.parse_actions = function(e, t) {
		if ("fup" === e.url.act || "fuv" === e.url.act || e.body_is_object) return ! (!e.body_is_object || !v.observe.bound("upload_attachment")) && {
			upload_attachment: [e.body_params]
		};
		e.url.search;
		var r = {},
		a = {
			tae: "add_to_tasks",
			"rc_^i": "archive",
			tr: "delete",
			dm: "delete_message_in_thread",
			dl: "delete_forever",
			dc_: "delete_label",
			dr: "discard_draft",
			el: "expand_categories",
			cffm: "filter_messages_like_these",
			arl: "label",
			mai: "mark_as_important",
			mani: "mark_as_not_important",
			us: "mark_as_not_spam",
			sp: "mark_as_spam",
			mt: "move_label",
			ib: "move_to_inbox",
			ig: "mute",
			rd: "read",
			sd: "save_draft",
			sm: "send_message",
			mo: "show_newly_arrived_message",
			st: "star",
			cs: "undo_send",
			ug: "unmute",
			ur: "unread",
			xst: "unstar",
			new_mail: "new_email",
			poll: "poll",
			refresh: "refresh",
			rtr: "restore_message_in_thread",
			open_email: "open_email",
			toggle_threads: "toggle_threads"
		};
		"string" == typeof e.url.ik && (v.tracker.ik = e.url.ik),
		"string" == typeof e.url.at && (v.tracker.at = e.url.at),
		"string" == typeof e.url.rid && -1 !== e.url.rid.indexOf("mail") && (v.tracker.rid = e.url.rid);
		var o = decodeURIComponent(e.url.act),
		n = e.body_params,
		i = "string" == typeof n.t ? [n.t] : n.t,
		s = null;
		switch (o) {
		case "cs":
		case "ur":
		case "rd":
		case "tr":
		case "sp":
		case "us":
		case "ib":
		case "dl":
		case "st":
		case "xst":
		case "mai":
		case "mani":
		case "ig":
		case "ug":
		case "dr":
		case "mt":
		case "cffm":
		case "rc_^i":
			s = [i, e.url, e.body];
			break;
		case "arl":
		case "dc_":
			s = [i, e.url, e.body, e.url.acn];
			break;
		case "sd":
			s = [i, e.url, n];
			break;
		case "tae":
		case "sm":
			s = [e.url, e.body, n];
			break;
		case "el":
			s = [e.url, e.body, "1" === n.ex];
			break;
		case "dm":
		case "rtr":
		case "mo":
			s = [n.m, e.url, e.body]
		}
		return "string" == typeof e.url._reqid && "tl" === e.url.view && void 0 !== e.url.auto && (s = [e.url.th, e.url, e.body], v.observe.bound("new_email") && (r.new_email = s)),
		"cv" !== e.url.view && "ad" !== e.url.view || "string" != typeof e.url.th || "string" != typeof e.url.search || void 0 !== e.url.rid || (s = [e.url.th, e.url, e.body], v.observe.bound("open_email") && (r.open_email = s)),
		"cv" !== e.url.view && "ad" !== e.url.view || "object" != typeof e.url.th || "string" != typeof e.url.search || void 0 === e.url.rid || (s = [e.url.th, e.url, e.body], v.observe.bound("toggle_threads") && (r.toggle_threads = s)),
		"cv" !== e.url.view && "ad" !== e.url.view || "string" != typeof e.url.th || "string" != typeof e.url.search || void 0 === e.url.rid || void 0 !== e.url.msgs && (s = [e.url.th, e.url, e.body], v.observe.bound("toggle_threads") && (r.toggle_threads = s)),
		"string" == typeof e.url.SID && "string" == typeof e.url.zx && -1 !== e.body.indexOf("req0_") && (v.tracker.SID = e.url.SID, s = [e.url, e.body, n], v.observe.bound("poll") && (r.poll = s)),
		"string" == typeof e.url.ik && "string" == typeof e.url.search && 0 === e.body.length && "string" == typeof e.url._reqid && (s = [e.url, e.body, n], v.observe.bound("refresh") && (r.refresh = s)),
		s && a[o] && v.observe.bound(a[o]) && (r[a[o]] = s),
		"POST" !== e.method || "string" != typeof e.url.SID && "string" != typeof e.url.ik && "string" != typeof e.url.act || (r.http_event = [e]),
		v.check.is_new_data_layer() && v.tools.parse_request_payload(e, r),
		r
	},
	v.check.data.is_thread_id = function(e) {
		return e && "string" == typeof e && /^thread-[a|f]:/.test(e)
	},
	v.check.data.is_thread = function(e) {
		return e && "object" == typeof e && e[1] && v.check.data.is_thread_id(e[1])
	},
	v.check.data.is_email_id = function(e) {
		return e && "string" == typeof e && -1 === e.indexOf("bump-") && /^msg-[a|f]:/.test(e)
	},
	v.check.data.is_email = function(e) {
		return e && "object" == typeof e && e[1] && v.check.data.is_email_id(e[1])
	},
	v.check.data.is_legacy_email_id = function(e) {
		return e && "string" == typeof e && /^[0-9a-f]{16,}$/.test(e)
	},
	v.check.data.is_action = function(e) {
		return v.check.data.is_first_type_action(e) || v.check.data.is_second_type_action(e)
	},
	v.check.data.is_first_type_action = function(e) {
		return e && e[1] && Array.isArray(e[1]) && 1 === e[1].length && "string" == typeof e[1][0]
	},
	v.check.data.is_second_type_action = function(e) {
		return e && e[2] && Array.isArray(e[2]) && e[2].length && "string" == typeof e[2][0]
	},
	v.check.data.is_smartlabels_array = function(e) {
		var t;
		if (!e || !Array.isArray(e) || 0 === e.length) return ! 1;
		for (t of e) {
			if ("string" != typeof t) return ! 1;
			if (!/^\^[a-z]+/.test(t)) return ! 1
		}
		return ! 0
	},
	v.check.data.is_json_string = function(e) {
		if (!e || "string" != typeof e) return ! 1;
		let t = e.trim();
		return t.startsWith("{") && t.endsWith("}") || t.startsWith("[") && t.endsWith("]")
	},
	v.tools.get_thread_id = function(e) {
		return v.check.data.is_thread(e) && e[1]
	},
	v.tools.get_thread_data = function(e) {
		return e && e[2] && "object" == typeof e[2] && e[2][7] && "object" == typeof e[2][7] && e[2][7]
	},
	v.tools.get_action = function(e) {
		return v.tools.get_first_type_action(e) || v.tools.get_second_type_action(e)
	},
	v.tools.get_first_type_action = function(e) {
		return e && e[1] && e[1].join("")
	},
	v.tools.get_second_type_action = function(e) {
		return e && e[2] && e[2].join("")
	},
	v.tools.get_message_ids = function(e) {
		return e && e[3] && Array.isArray(e[3]) && e[3]
	},
	v.tools.extract_from_graph = function(e, t) {
		const a = [],
		o = function(e) {
			try {
				return t(e)
			} catch(e) {
				return ! 1
			}
		},
		n = function(e) {
			if (o(e)) a.push(e);
			else for (var t in e) {
				t = e[t];
				if (o(t)) a.push(t);
				else if (Array.isArray(t)) for (var r of t) n(r, e);
				else "object" == typeof t && n(t)
			}
		};
		return n(e),
		a
	},
	v.tools.check_event_type = function(e) {
		var t = {
			"^a": "archive",
			"^k": "delete",
			"^x_": "label",
			"^u^us": "read",
			"^u": "unread",
			"^us": "new_email",
			"^o": "open_email"
		},
		e = v.tools.get_thread_data(e);
		if (e && v.check.data.is_action(e)) {
			const r = v.tools.get_action(e);
			return r.startsWith("^x_") && v.check.data.is_first_type_action(e) ? t["^x_"] : t[r]
		}
		return null
	},
	v.tools.parse_fd_bv_contacts = function(e) {
		if (!e || !Array.isArray(e)) return [];
		const t = [];
		for (var r of e) t.push(v.tools.parse_fd_bv_contact(r));
		return t
	},
	v.tools.parse_fd_bv_contact = function(e) {
		try {
			return {
				name: e[3],
				address: e[2]
			}
		} catch(e) {
			return null
		}
	},
	v.tools.parse_fd_attachments = function(e) {
		let t = [];
		if (Array.isArray(e)) for (var r of e) {
			var a = r[1][4] || "";
			t.push({
				attachment_id: r[1][2],
				name: a[3],
				type: a[4],
				url: v.tools.check_fd_attachment_url(a[2]),
				size: Number.parseInt(a[5])
			})
		}
		return t
	},
	v.tools.check_fd_attachment_url = function(e) {
		var t = v.tracker.globals[7];
		return e = e && t && e.indexOf(t) < 0 ? e.replace("/mail/?", t + "?") : e
	},
	v.tools.parse_fd_request_html_payload = function(e) {
		let t = null;
		try {
			var r;
			for (r of e[2][6][2]) t = (t || "") + r[3][2]
		} catch(e) {}
		return t
	},
	v.tools.parse_fd_embedded_json_content_html = function(e) {
		let t = null;
		try {
			var r;
			for (r of e[9][2]) t = (t || "") + r[3][2]
		} catch(e) {}
		return t
	},
	v.tools.parse_fd_request_payload_get_email2 = function(e, t) {
		try {
			const r = e[2][2];
			return r.filter(e = >e[1] === t)[0]
		} catch(e) {
			return {}
		}
	},
	v.tools.parse_fd_embedded_json_get_email = function(e, t) {
		try {
			const r = e[2][5];
			return r.filter(e = >e[1] === t)[0]
		} catch(e) {
			return {}
		}
	},
	v.tools.parse_fd_request_payload = function(e) {
		var t, e = e[2];
		if (!e || !Array.isArray(e)) return null;
		try {
			const g = [];
			for (t of e) {
				var r, a = t[1];
				for (r of t[3]) {
					var o = r[1],
					n = v.tools.parse_fd_request_payload_get_email2(t, o),
					i = r[2][35],
					s = r[2][8],
					l = r[2][5],
					c = Number.parseInt(r[2][17]),
					d = new Date(c),
					u = v.tools.parse_fd_request_html_payload(r),
					_ = v.tools.parse_fd_attachments(r[2][14]),
					m = r[2][11][17];
					let e = v.tools.parse_fd_bv_contact(n[2]);
					e = e || {
						address: m,
						name: ""
					};
					var h = v.tools.parse_fd_bv_contacts(r[2][1]),
					f = v.tools.parse_fd_bv_contacts(r[2][2]),
					p = v.tools.parse_fd_bv_contacts(r[2][3]);
					const b = {
						id: o,
						legacy_email_id: i,
						thread_id: a,
						smtp_id: s,
						subject: l,
						timestamp: c,
						content_html: u,
						date: d,
						from: e,
						to: h,
						cc: f,
						bcc: p,
						attachments: _
					};
					v.cache.debug_xhr_fetch && (b.$email_node = r, b.$thread_node = t),
					g.push(b)
				}
			}
			return g
		} catch(e) {
			return console.warn("Gmail.js encountered an error trying to parse email-data on fd request!", e),
			null
		}
	},
	v.tools.parse_fd_embedded_json = function(e) {
		var t, e = e[2];
		if (!e || !Array.isArray(e)) return null;
		try {
			const g = [];
			for (t of e) {
				var r, a = t[2][4];
				for (r of t[2][5]) {
					var o = r[1],
					n = v.tools.parse_fd_embedded_json_get_email(t, o),
					i = r[56],
					s = r[14],
					l = r[8],
					c = Number.parseInt(r[18]),
					d = new Date(c),
					u = v.tools.parse_fd_embedded_json_content_html(r),
					_ = v.tools.parse_fd_attachments(r[12]),
					m = r[19][17];
					let e = v.tools.parse_fd_bv_contact(n[2]);
					e = e || {
						address: m,
						name: ""
					};
					var h = v.tools.parse_fd_bv_contacts(r[3]),
					f = v.tools.parse_fd_bv_contacts(r[4]),
					p = v.tools.parse_fd_bv_contacts(r[5]);
					const b = {
						id: o,
						legacy_email_id: i,
						thread_id: a,
						smtp_id: s,
						subject: l,
						timestamp: c,
						content_html: u,
						date: d,
						from: e,
						to: h,
						cc: f,
						bcc: p,
						attachments: _
					};
					v.cache.debug_xhr_fetch && (b.$email_node = r, b.$thread_node = t),
					g.push(b)
				}
			}
			return g
		} catch(e) {
			return console.warn("Gmail.js encountered an error trying to parse email-data on embedded json!", e),
			null
		}
	},
	v.tools.parse_bv_request_payload = function(e) {
		var t, e = e[3];
		if (!e || !Array.isArray(e)) return null;
		try {
			const u = [];
			for (t of e) {
				var r, a = t[1][1],
				o = t[1][4];
				for (r of t[1][5]) {
					var n = r[1],
					i = r[56],
					s = a,
					l = Number.parseInt(r[18]),
					c = new Date(l),
					d = [];
					const _ = {
						id: n,
						legacy_email_id: i,
						thread_id: o,
						smtp_id: "",
						subject: s,
						timestamp: l,
						content_html: "",
						date: c,
						from: {
							address: void 0 !== r[2][2] ? r[2][2] : "",
							name: void 0 !== r[2][3] ? r[2][3] : ""
						},
						to: [],
						cc: [],
						bcc: [],
						attachments: d
					};
					v.cache.debug_xhr_fetch && (_.$email_node = r, _.$thread_node = t),
					u.push(_)
				}
			}
			return u
		} catch(e) {
			return console.warn("Gmail.js encountered an error trying to parse email-data on bv request!", e),
			null
		}
	},
	v.tools.parse_bv_embedded_json = function(e) {
		var t, e = e[1][1];
		if (!e || !Array.isArray(e)) return null;
		try {
			const u = [];
			for (t of e) {
				var r, a = t[5][1],
				o = t[5][4];
				for (r of t[5][5]) {
					var n = r[1],
					i = r[56],
					s = a,
					l = Number.parseInt(r[18]),
					c = new Date(l),
					d = [];
					const _ = {
						id: n,
						legacy_email_id: i,
						thread_id: o,
						smtp_id: "",
						subject: s,
						timestamp: l,
						content_html: "",
						date: c,
						from: {
							address: void 0 !== r[2][2] ? r[2][2] : "",
							name: void 0 !== r[2][3] ? r[2][3] : ""
						},
						to: [],
						cc: [],
						bcc: [],
						attachments: d
					};
					v.cache.debug_xhr_fetch && (_.$email_node = r, _.$thread_node = t),
					u.push(_)
				}
			}
			return u
		} catch(e) {
			return console.warn("Gmail.js encountered an error trying to parse email-data on bv request!", e),
			null
		}
	},
	v.tools.parse_sent_message_html_payload = function(e) {
		let t = null;
		try {
			var r;
			for (r of e[9][2]) t = (t || "") + r[2]
		} catch(e) {}
		return t
	},
	v.tools.parse_sent_message_attachments = function(e) {
		let t = [];
		if (Array.isArray(e)) for (var r of e) t.push({
			id: r[5],
			name: r[2],
			type: r[1],
			url: r[6],
			size: Number.parseInt(r[3])
		});
		return t
	},
	v.tools.parse_sent_message_payload = function(e) {
		try {
			var t = e,
			r = t[1],
			a = t[8],
			o = Number.parseInt(t[7]),
			n = new Date(o),
			i = v.tools.parse_sent_message_html_payload(t),
			s = t[9][7],
			l = v.tools.parse_sent_message_attachments(t[12]);
			return {
				1 : r,
				id: r,
				subject: a,
				timestamp: o,
				content_html: i,
				ishtml: s,
				date: n,
				from: v.tools.parse_fd_bv_contact(t[2]),
				to: v.tools.parse_fd_bv_contacts(t[3]),
				cc: v.tools.parse_fd_bv_contacts(t[4]),
				bcc: v.tools.parse_fd_bv_contacts(t[5]),
				attachments: l,
				email_node: e
			}
		} catch(e) {
			return console.warn("Gmail.js encountered an error trying to parse sent message!", e),
			null
		}
	},
	v.tools.parse_request_payload = function(t, r, e) {
		const a = v.tools.get_pathname_from_url(t.url_raw);
		if (e || a) {
			var o, n = (a || "").endsWith("/i/s"),
			i = (a || "").endsWith("/i/fd");
			if (e || i || n) {
				i && (r.load_email_data = [null]);
				const u = v.tools.extract_from_graph(t, v.check.data.is_thread);
				for (o of v.tools.extract_from_graph(t, v.check.data.is_email)) for (var s in o) {
					let e = o[s];
					v.check.data.is_smartlabels_array(e) && (s = v.tools.parse_sent_message_payload(o), -1 !== e.indexOf("^pfg") ? r.send_message = [t.url, t.body, s] : -1 < e.indexOf("^scheduled") && (r.send_scheduled_message = [t.url, t.body, s]))
				}
				try {
					if (Array.isArray(u) && v.check.data.is_thread(u[0])) {
						var l = v.tools.check_event_type(u[0]);
						if (l) {
							const _ = u.map(e = >v.tools.get_thread_data(e));
							var c = u.map(e = >v.tools.get_thread_id(e)),
							d = _.map(e = >v.tools.get_message_ids(e)).reduce((e, t) = >e.concat(t), []);
							r[l] = [null, t.url, t.body, d, c]
						}
					}
				} catch(e) {
					console.error("Error: ", e)
				}
			}
		}
	},
	v.tools.parse_response = function(t) {
		if (v.check.data.is_json_string(t)) try {
			return JSON.parse(t)
		} catch(e) {}
		if (t.startsWith("<!DOCTYPE html") || -1 !== t.indexOf("display:inline-block")) return [];
		let r = [];
		try {
			for (t = (t = t.replace(/\n/g, " ")).substring(t.indexOf("'") + 1, t.length); 1 < t.replace(/\s/g, "").length;) {
				let e = t.substring(0, t.indexOf("[")).replace(/\s/g, "");
				e = e || t.length;
				var a = parseInt(e, 10) - 2 + t.indexOf("["),
				o = t.substring(t.indexOf("["), a),
				n = JSON.parse(o);
				r.push(n),
				t = (t = t.substring(t.indexOf("["), t.length)).substring(o.length, t.length)
			}
		} catch(e) {}
		return r
	},
	v.tools.parse_attachment_url = function(e) {
		e = e.split(":");
		return {
			type: e[0],
			url: e[2] + ":" + e[3]
		}
	};
	e = function(e, t) {
		for (var r in t) e[r] = t[r]
	};
	v.tools.parse_requests = function(e, t) {
		e.url_raw = e.url,
		e.url = v.tools.parse_url(e.url),
		"object" == typeof e.body ? (e.body_params = e.body, e.body_is_object = !0) : v.check.data.is_json_string(e.body) ? e.body_params = JSON.parse(e.body) : void 0 !== e.body ? e.body_params = v.tools.deparam(e.body) : e.body_params = {},
		"object" != typeof v.tracker.events && "object" != typeof v.tracker.actions && (v.tracker.events = [], v.tracker.actions = []),
		v.tracker.events.unshift(e);
		t = v.tools.parse_actions(e, t);
		return "POST" === e.method && "string" == typeof e.url.act && v.tracker.actions.unshift(e),
		50 < v.tracker.events.length && v.tracker.events.pop(),
		10 < v.tracker.actions.length && v.tracker.actions.pop(),
		t
	},
	v.tools.patch = function(e, t) {
		t(e)
	},
	v.tools.cache_email_data = function(e, t) {
		if (null !== e) {
			const o = v.cache;
			let r = !1;
			"fd_request_payload" !== t && "fd_embedded_json" !== t || (r = !0);
			for (let t of e) { (void 0 === o.emailIdCache[t.id] || r) && (o.emailIdCache[t.id] = t, o.emailLegacyIdCache[t.legacy_email_id] = t);
				let e = o.threadCache[t.thread_id];
				var a;
				e || (e = {
					thread_id: t.thread_id,
					emails: []
				},
				o.threadCache[t.thread_id] = e),
				0 === e.emails.filter(e = >e.id === t.id).length ? e.emails.push(t) : r && (a = e.emails.findIndex(e = >e.id === t.id), e.emails[a] = t)
			}
		}
	},
	v.tools.xhr_watcher = function() {
		if (!v.tracker.xhr_init) {
			v.tracker.xhr_init = !0;
			const e = v.helper.get_xhr_window();
			v.tools.patch(e.XMLHttpRequest.prototype.open, i = >{
				e.XMLHttpRequest.prototype.open = function(e, t, r, a, o) {
					var n = i.apply(this, arguments);
					return this.xhrParams = {
						method: e.toString(),
						url: t.toString()
					},
					n
				}
			}),
			v.tools.patch(e.XMLHttpRequest.prototype.send, n = >{
				e.XMLHttpRequest.prototype.send = function(e) {
					var r, a, o = !1;
					this.xhrParams && (this.xhrParams.body = e, o = v.tools.parse_requests(this.xhrParams, this)),
					v.observe.trigger("before", o, this) && (e = v.check.is_new_data_layer() ? arguments[0] = this.xhrParams.body_is_object ? this.xhrParams.body_params: JSON.stringify(this.xhrParams.body_params) : arguments[0] = this.xhrParams.body_is_object ? this.xhrParams.body_params: u.param(this.xhrParams.body_params, !0).replace(/\+/g, "%20")),
					(v.observe.bound(o, "after") || v.check.is_new_data_layer()) && (r = this.onreadystatechange, (a = this).onreadystatechange = function(e) {
						var t;
						this.readyState === this.DONE && ("" === e.target.responseType || "text" === e.target.responseType ? a.xhrResponse = v.tools.parse_response(e.target.responseText) : a.xhrResponse = e.target.response, v.check.is_new_data_layer() && (!v.tools.get_pathname_from_url(a.xhrParams.url_raw).endsWith("/i/fd") || null != (t = v.tools.parse_fd_request_payload(a.xhrResponse)) && (v.tools.cache_email_data(t, "fd_request_payload"), o.load_email_data = [t]), !v.tools.get_pathname_from_url(a.xhrParams.url_raw).endsWith("/i/bv") || null != (t = v.tools.parse_bv_request_payload(a.xhrResponse)) && (v.tools.cache_email_data(t, "bv_request_payload"), o.load_email_data = [t])), v.observe.trigger("after", o, a)),
						r && r.apply(this, arguments)
					});
					var t = n.apply(this, arguments);
					return v.observe.trigger("on", o, this),
					t
				}
			})
		}
	},
	v.tools.embedded_data_watcher = function() {
		var r;
		v.tracker.embedded_data_init || (v.tracker.embedded_data_init = !0, r = window._GM_setData, window._GM_setData = function(e) {
			var t;
			void 0 !== e && void 0 !== e.Cl6csf && void 0 !== e.Cl6csf[0][2] && (t = v.tools.parse_fd_embedded_json(JSON.parse(e.Cl6csf[0][2])), v.tools.cache_email_data(t, "fd_embedded_json")),
			void 0 !== e && void 0 !== e.a6jdv && void 0 !== e.a6jdv[0][2] && (t = v.tools.parse_bv_embedded_json(JSON.parse(e.a6jdv[0][2])), v.tools.cache_email_data(t, "bv_embedded_json")),
			r(e)
		})
	},
	v.helper.get_xhr_window = function() {
		if (v.check.is_new_gui()) return top;
		var e = null;
		return top.document.getElementById("js_frame") ? e = top.document.getElementById("js_frame") : t && (e = t.top.document.getElementById("js_frame")),
		(e = e || (t ? t.top: top)).contentDocument ? e.contentDocument.defaultView: e
	},
	v.observe.http_requests = function() {
		return v.tracker.events
	},
	v.observe.actions = function() {
		return v.tracker.actions
	},
	v.observe.bind = function(e, t, r) {
		"object" != typeof v.tracker.watchdog && (v.tracker.watchdog = {
			before: {},
			on: {},
			after: {},
			dom: {}
		},
		v.tracker.bound = {}),
		"object" != typeof v.tracker.watchdog[e] && v.tools.error("api.observe.bind called with invalid type: " + e),
		"dom" !== e && v.tools.xhr_watcher(),
		"object" != typeof v.tracker.watchdog[e][t] && (v.tracker.watchdog[e][t] = []),
		v.tracker.watchdog[e][t].push(r),
		v.tracker.bound[t] = void 0 === v.tracker.bound[t] ? 1 : v.tracker.bound[t] + 1,
		v.tracker.bound[e] = void 0 === v.tracker.bound[e] ? 1 : v.tracker.bound[e] + 1
	},
	v.observe.on = function(e, t, r) {
		if (v.observe.on_dom(e, t)) return ! 0;
		v.observe.bind("on", e, t),
		r && v.observe.after(e, t)
	},
	v.observe.before = function(e, t) {
		v.observe.bind("before", e, t)
	},
	v.observe.after = function(e, t) {
		v.observe.bind("after", e, t)
	},
	v.observe.bound = function(e, r) {
		if ("object" != typeof v.tracker.watchdog) return ! 1;
		if (e) {
			if ("object" != typeof e) return r ? "object" == typeof v.tracker.watchdog[r][e] : 0 < v.tracker.bound[e];
			var a = !1;
			return u.each(e,
			function(e, t) {
				"object" == typeof v.tracker.watchdog[r][e] && (a = !0)
			}),
			a
		}
		if (r) return 0 < v.tracker.bound[r];
		v.tools.error("api.observe.bound called with invalid args")
	},
	v.observe.off = function(t, e) {
		if ("object" != typeof v.tracker.watchdog) return ! 0;
		u.each(e ? [e] : ["before", "on", "after", "dom"],
		function(e, r) {
			return "object" != typeof v.tracker.watchdog[r] || void(t ? "object" == typeof v.tracker.watchdog[r][t] && (v.tracker.bound[t] -= v.tracker.watchdog[r][t].length, v.tracker.bound[r] -= v.tracker.watchdog[r][t].length, delete v.tracker.watchdog[r][t]) : u.each(v.tracker.watchdog[r],
			function(e, t) {
				"object" == typeof v.tracker.watchdog[r][e] && (v.tracker.bound[e] -= v.tracker.watchdog[r][e].length, v.tracker.bound[r] -= v.tracker.watchdog[r][e].length, delete v.tracker.watchdog[r][e])
			}))
		})
	},
	v.observe.trigger = function(t, e, a) {
		if (!e) return ! 1;
		var o = !1;
		return u.each(e,
		function(e, r) {
			r = u.extend([], r),
			"after" === t && r.push(a.xhrResponse),
			r.push(a),
			v.observe.bound(e, t) && (o = !0, u.each(v.tracker.watchdog[t][e],
			function(e, t) {
				t.apply(void 0, r)
			}))
		}),
		o
	},
	v.observe.trigger_dom = function(e, r, a) {
		a = a ||
		function(e, t) {
			t(e)
		},
		v.tracker.watchdog.dom[e] && u.each(v.tracker.watchdog.dom[e],
		function(e, t) {
			a(r, t)
		})
	},
	v.observe.initialize_dom_observers = function() {
		v.tracker.dom_observer_init = !0,
		v.tracker.supported_observers = ["view_thread", "view_email", "load_email_menu", "recipient_change", "compose"],
		v.tracker.dom_observers = {
			view_thread: {
				class: ["Bu", "nH"],
				sub_selector: "div.if",
				handler: function(e, t) {
					t(e = new v.dom.thread(e))
				}
			},
			view_email: {
				class: ["Bu", "nH", ""],
				sub_selector: "div.adn",
				handler: function(e, t) {
					t(e = new v.dom.email(e))
				}
			},
			load_email_menu: {
				class: "J-N",
				selector: "div[role=menu] div[role=menuitem]:first-child",
				handler: function(e, t) {
					t(e = e.closest("div[role=menu]"))
				}
			},
			recipient_change: {
				class: "vR",
				handler: function(e, r) {
					"object" != typeof v.tracker.recipient_matches && (v.tracker.recipient_matches = []),
					v.tracker.recipient_matches.push(e),
					setTimeout(function() {
						var e, t;
						v.tracker.recipient_matches.length && (t = (e = new v.dom.compose(v.tracker.recipient_matches[0].closest("div.M9"))).recipients(), r(e, t, v.tracker.recipient_matches), v.tracker.recipient_matches = [])
					},
					100)
				}
			},
			compose: {
				class: "An",
				handler: function(e, t) {
					var r, a = e; (e = e.closest("div.M9")).length && ((e = new v.dom.compose(e)).is_inline() ? r = 0 === e.find("input[name=subject]").val().indexOf("Fw") ? "forward": "reply": (r = "compose", a.closest("div.AD").find(".Ha").mouseup(function() {
						return v.tracker.composeCancelledCallback && v.tracker.composeCancelledCallback(e),
						!0
					})), t(e, r))
				}
			}
		},
		v.tracker.custom_supported_observers && (u.merge(v.tracker.supported_observers, v.tracker.custom_supported_observers), u.extend(!0, v.tracker.dom_observers, v.tracker.custom_dom_observers)),
		v.tracker.dom_observer_map = {},
		u.each(v.tracker.dom_observers,
		function(r, e) {
			u.isArray(e.class) || (e.class = [e.class]),
			u.each(e.class,
			function(e, t) {
				v.tracker.dom_observer_map[t] || (v.tracker.dom_observer_map[t] = []),
				v.tracker.dom_observer_map[t].push(r)
			})
		})
	},
	v.observe.register = function(e, r) {
		v.tracker.dom_observer_init && v.tools.error("Error: Please register all custom DOM observers before binding handlers using gmail.observe.on etc"),
		v.tracker.custom_supported_observers || (v.tracker.custom_supported_observers = [], v.tracker.custom_dom_observers = {});
		var a = {};
		"object" != typeof r || u.isArray(r) ? a.class = r: u.each(["class", "selector", "sub_selector", "handler"],
		function(e, t) {
			r[t] && (a[t] = r[t])
		}),
		v.tracker.custom_supported_observers.push(e),
		v.tracker.custom_dom_observers[e] = a
	};
	function o() {
		v.tracker.jackPreventionInstalled || (window.addEventListener("click", e = >{
			const t = (r = e).path ? r.path[0] : r.target;
			var r;
			if (t && t !== document.body) {
				const a = t.querySelector(".gmailjs");
				a && (a.click(), e.preventDefault())
			}
		}), v.tracker.jackPreventionInstalled = !0)
	}
	v.observe.on_dom = function(e, t) {
		if (v.tracker.dom_observer_init || v.observe.initialize_dom_observers(), -1 < u.inArray(e, v.tracker.supported_observers)) return v.tracker.observing_dom || (v.tracker.observing_dom = !0, u(window.document).on("DOMNodeInserted",
		function(e) {
			v.tools.insertion_observer(e.target, v.tracker.dom_observers, v.tracker.dom_observer_map)
		}), new MutationObserver(function(e) {
			for (var t = 0; t < e.length; t++) for (var r, a, o = e[t], n = o.removedNodes, i = 0; i < n.length; i++)"vR" === n[i].className && (r = v.tracker.dom_observer_map.vR, a = v.tracker.dom_observers.recipient_change.handler, v.observe.trigger_dom(r, u(o.target), a))
		}).observe(document.body, {
			subtree: !0,
			childList: !0
		})),
		v.observe.bind("dom", e, t),
		!0;
		if ("compose_cancelled" === e) v.tracker.composeCancelledCallback = t;
		else if ("load" === e) {
			if (v.dom.inbox_content().length) return o(),
			t();
			var r = 0,
			a = setInterval(function() {
				return 0 < v.dom.inbox_content().length ? (clearInterval(a), o(), t()) : void(50 < ++r && (clearInterval(a), setTimeout(t, 5e3)))
			},
			200);
			return ! 0
		}
	},
	v.tools.insertion_observer = function(n, i, s, e) {
		var t;
		v.tracker.dom_observer_map && ((t = (t = n.className || "").trim ? t.trim().split(/\s+/) : []).length || t.push(""), u.each(t,
		function(e, t) {
			t = s[t];
			if (t) for (var r of t) if (r && v.tracker.watchdog.dom[r]) {
				var a = u(n),
				o = i[r];
				if (o.selector && !a.is(o.selector)) return; (a = o.sub_selector ? a.find(o.sub_selector) : a).length && (o = o.handler ||
				function(e, t) {
					t(e)
				},
				v.observe.trigger_dom(r, a, o))
			}
		}))
	},
	v.tools.make_request = function(e, t, r) {
		e = decodeURIComponent(e.replace(/%23/g, "#-#-#")),
		e = {
			type: t = t || "GET",
			url: e = encodeURI(e).replace(/#-#-#/gi, "%23"),
			async: !1,
			dataType: "text"
		};
		return r && (e.cache = !1),
		u.ajax(e).responseText
	},
	v.tools.make_request_async = function(e, t, a, o, r) {
		e = decodeURIComponent(e.replace(/%23/g, "#-#-#")),
		e = {
			type: t = t || "GET",
			url: e = encodeURI(e).replace(/#-#-#/gi, "%23"),
			async: !0,
			dataType: "text"
		};
		r && (e.cache = !1),
		u.ajax(e).done(function(e, t, r) {
			a(r.responseText)
		}).fail(function(e, t, r) {
			console.error("Request Failed", r),
			"function" == typeof o && o(e, t, r)
		})
	},
	v.tools.make_request_download_promise = function(e, o) {
		var t = Date.now();
		e += "&cacheCounter=" + t;
		let n = o ? "arraybuffer": "text";
		return new Promise((r, t) = >{
			const a = new XMLHttpRequest;
			a.open("GET", e, !0),
			a.responseType = n,
			a.onreadystatechange = () = >{
				var e, t;
				a.readyState === XMLHttpRequest.DONE && 200 <= a.status && a.status <= 302 && ((e = a.response) && (o ? (t = new Uint8Array(e), r(t)) : r(e)))
			},
			a.onerror = e = >{
				t(e)
			},
			a.send()
		})
	},
	v.tools.parse_view_data = function(e) {
		for (var t = [], r = [], a = 0; a < e.length; a++) if ("tb" === e[a][0]) for (var o = 0; o < e[a][2].length; o++) r.push(e[a][2][o]);
		for (var n = 0; n < r.length; n++) {
			var i = r[n];
			t.push({
				id: i[0],
				title: i[9],
				excerpt: i[10],
				time: i[15],
				sender: i[28],
				attachment: i[13],
				labels: i[5]
			})
		}
		return t
	},
	v.helper.get.is_delegated_inbox = function() {
		return 1 === u(".identityUserDelegatedAccount").length
	},
	v.helper.get.visible_emails_pre = function(e) {
		var t = v.get.current_page(),
		r = window.location.origin + window.location.pathname + "?ui=2&ik=" + v.tracker.ik + "&rid=" + v.tracker.rid + "&view=tl&num=120&rt=1",
		a = u(".aqK:visible .Dj").find("span:first").text().replace(",", "").replace(".", "").split("–")[0];
		r += a ? "&start=" + (a = parseInt(a - 1)) + "&sstart=" + a: "&start=0";
		var o = "";
		return 0 === t.indexOf("label/") ? r += "&cat=" + t.split("/")[1] + "&search=cat": 0 === t.indexOf("category/") ? ( - 1 !== t.indexOf("forums") ? o = "group": -1 !== t.indexOf("updates") ? o = "notification": -1 !== t.indexOf("promotion") ? o = "promo": -1 !== t.indexOf("social") && (o = "social"), r += "&cat=^smartlabel_" + o + "&search=category") : 0 === t.indexOf("search/") ? (a = u("input[name=at]").val(), r += "&qs=true&q=" + t.split("/")[1] + "&at=" + a + "&search=query") : "inbox" === t ? "true" === u("div[aria-label='Social']").attr("aria-selected") ? r += "&cat=^smartlabel_" + (o = "social") + "&search=category": "true" === u("div[aria-label='Promotions']").attr("aria-selected") ? r += "&cat=^smartlabel_" + (o = "promo") + "&search=category": "true" === u("div[aria-label='Updates']").attr("aria-selected") ? r += "&cat=^smartlabel_" + (o = "notification") + "&search=category": "true" === u("div[aria-label='Forums']").attr("aria-selected") ? r += "&cat=^smartlabel_" + (o = "group") + "&search=category": e ? r += "&search=" + e: v.check.is_google_apps_user() ? r += "&search=inbox": r += "&search=mbox": r += "&search=" + t,
		r
	},
	v.helper.get.visible_emails_post = function(e) {
		var t = [];
		if (!e) return t;
		var r, a, e = e.substring(e.indexOf("["), e.length),
		e = JSON.parse(e);
		for (r in v.tracker.view_data = e, v.tracker.view_data)"function" != typeof v.tracker.view_data[r] && (0 < (a = v.tools.parse_view_data(v.tracker.view_data[r])).length &&
		function(e, t) {
			for (var r = 0; r < t.length; r++) {
				var a = t[r];
				e.push(a)
			}
		} (t, a));
		return t
	},
	v.get.visible_emails = function(e) {
		e = v.helper.get.visible_emails_pre(e),
		e = v.tools.make_request(e);
		return v.helper.get.visible_emails_post(e)
	},
	v.get.visible_emails_async = function(t, e) {
		e = v.helper.get.visible_emails_pre(e);
		v.tools.make_request_async(e, "GET",
		function(e) {
			e = v.helper.get.visible_emails_post(e);
			t(e)
		})
	},
	v.get.selected_emails_data = function(e) {
		var t, r, a = [];
		return v.check.is_inside_email() ? a.push(v.get.email_data()) : u("[gh='tl'] div[role='checkbox'][aria-checked='true']").length && (t = null, r = v.get.visible_emails(e), u("[gh='tl'] div[role='checkbox']").each(function(e) {
			"true" === u(this).attr("aria-checked") && (t = v.get.email_data(r[e].id), a.push(t))
		})),
		a
	},
	v.get.current_page = function(e) {
		e = (e = e || window.location.hash).split("#").pop().split("?").shift() || "inbox";
		if (e.match(/\/[0-9a-zA-Z]{16,}$/gi)) return "email";
		if (0 !== e.indexOf("search/") && 0 !== e.indexOf("category/") && 0 !== e.indexOf("label/")) return e.split("/").shift();
		e = e.split("/");
		return e[0] + "/" + e[1]
	},
	v.tools.infobox = function(e, t, r) {
		var a, o, n = u(".b8.UC");
		0 < n.length && (n.stop(!1, !0), a = n.find(".vh"), r ? a.html(e) : a.text(e), void 0 !== t ? (o = n.attr("style"), n.removeAttr("style").fadeTo(t, 0,
		function() {
			u(this).attr("style", o)
		})) : n.removeAttr("style"))
	},
	v.tools.rerender = function(e) {
		var t = window.location.href,
		r = -1 !== window.location.hash.indexOf("/") ? t.replace(/#.*?\//, "#/") : t.replace(/#.*/, "#");
		window.location.replace(r),
		setTimeout(function() {
			window.location.replace(t),
			window.history.back(),
			e && e()
		},
		0)
	},
	v.tools.get_reply_to = function(e) {
		e = e ? e[4] : [];
		return 0 !== e.length ? v.tools.extract_email_address(e[0]) : null
	},
	v.tools.parse_attachment_data = function(e) {
		if (!e[7] || !e[7][0]) return null;
		var t = "";
		"undefined" != typeof window && (t = window.location.origin + window.location.pathname);
		var r = e[7][0];
		v.tracker.attachment_data = r;
		for (var a = [], o = 0; o < r.length; o++) {
			var n = r[o];
			a.push({
				attachment_id: n[0],
				name: n[1],
				type: n[2],
				size: n[3],
				url: t + n[9]
			})
		}
		return a
	},
	v.tools.parse_email_data = function(e) {
		var t, r = {};
		for (t in e) {
			var a = e[t];
			if ("cs" === a[0] && (r.thread_id = a[1], r.first_email = a[8][0], r.last_email = a[2], r.total_emails = a[3], r.total_threads = a[8], r.people_involved = a[15], r.subject = a[23]), "ms" === a[0]) {
				void 0 === r.threads && (r.threads = {}),
				r.threads[a[1]] = {},
				r.threads[a[1]].is_deleted = a[9] && -1 < a[9].indexOf("^k"),
				r.threads[a[1]].reply_to_id = a[2],
				r.threads[a[1]].from = a[5],
				r.threads[a[1]].from_email = a[6],
				r.threads[a[1]].timestamp = a[7],
				r.threads[a[1]].datetime = a[24],
				r.threads[a[1]].attachments = a[21].split(","),
				r.threads[a[1]].attachments_details = a[13] ? v.tools.parse_attachment_data(a[13]) : null,
				r.threads[a[1]].subject = a[12],
				r.threads[a[1]].content_html = a[13] ? a[13][6] : a[8],
				r.threads[a[1]].to = a[13] ? a[13][1] : void 0 !== a[37] ? a[37][1] : [],
				r.threads[a[1]].cc = a[13] ? a[13][2] : [],
				r.threads[a[1]].bcc = a[13] ? a[13][3] : [],
				r.threads[a[1]].reply_to = v.tools.get_reply_to(a[13]),
				r.threads[a[1]].labels = a[9];
				try {
					r.threads[a[1]].content_plain = a[13] ? u(a[13][6]).text() : a[8]
				} catch(e) {
					r.threads[a[1]].content_plain = a[13] ? a[13][6] : a[8]
				}
			}
		}
		return r
	},
	v.helper.get.email_data_pre = function(e) {
		r("Migrate code to use gmail.new.get.email_data() to fix this problem.");
		var t = null;
		return t = void 0 !== (e = v.check.is_inside_email() && void 0 === e ? v.get.thread_id() : e) ? window.location.origin + window.location.pathname + "?ui=2&ik=" + v.tracker.ik + "&rid=" + v.tracker.rid + "&view=cv&th=" + e + "&msgs=&mb=0&rt=1&search=inbox": t
	},
	v.helper.get.email_data_post = function(e) {
		if (!e) return {};
		e = e.substring(e.indexOf("["), e.length),
		e = JSON.parse(e);
		return v.tracker.email_data = e[0],
		v.tools.parse_email_data(v.tracker.email_data)
	},
	v.get.email_data = function(e) {
		e = v.helper.get.email_data_pre(e);
		if (null === e) return {};
		e = v.tools.make_request(e);
		return v.helper.get.email_data_post(e)
	},
	v.get.email_data_async = function(e, t) {
		e = v.helper.get.email_data_pre(e);
		null !== e ? v.tools.make_request_async(e, "GET",
		function(e) {
			e = v.helper.get.email_data_post(e);
			t(e)
		}) : t({})
	},
	v.helper.get.legacy_email_id = function(e) {
		if (!e) return null;
		if (v.check.data.is_legacy_email_id(e)) return e;
		if (e.legacy_email_id) return e.legacy_email_id;
		if (v.check.data.is_email_id(e)) {
			console.warn("GmailJS: Warning! Using new-style ID in method expecting legacy-style IDs! Attempting to resolve via cache, but there's no guarantee this will work!");
			var t = v.cache.emailIdCache[e];
			return t && t.legacy_email_id
		}
		return (e = e.$el && e.$el[0] ? e.$el[0] : e).dataset && e.dataset.legacyMessageId ? e.dataset.legacyMessageId: null
	},
	v.helper.get.new_email_id = function(t) {
		if (!t) return null;
		if (v.check.data.is_email_id(t)) return t;
		if (t.id && !t.$el) return t.id;
		if (v.check.data.is_legacy_email_id(t)) {
			console.warn("GmailJS: Warning! Using legacy-style ID in method expecting new-style IDs! Attempting to resolve via cache, but there's no guarantee this will work!");
			var e = v.cache.emailLegacyIdCache[t];
			return e && e.id
		}
		if ((t = t.$el && t.$el[0] ? t.$el[0] : t).dataset && t.dataset.messageId) {
			let e = t.dataset.messageId;
			return 0 === e.indexOf("#") && (e = e.substring(1)),
			e
		}
		return null
	},
	v.helper.get.thread_id = function(t) {
		if (!t) return null;
		if (v.check.data.is_thread_id(t)) return t;
		if (t.thread_id) return t.thread_id;
		if (v.check.data.is_email_id(t)) {
			console.warn("GmailJS: Warning! Using email-ID in method expecting thread-ID! Attempting to resolve via cache, but there's no guarantee this will work!");
			var e = v.cache.emailIdCache[t];
			return e && e.thread_id
		}
		if (v.check.data.is_legacy_email_id(t)) {
			console.warn("GmailJS: Warning! Using legacy-style ID in method expecting thread-ID! Attempting to resolve via cache, but there's no guarantee this will work!");
			e = v.cache.emailLegacyIdCache[t];
			return e && e.thread_id
		}
		if ((t = t.$el && t.$el[0] ? t.$el[0] : t).dataset && t.dataset.threadPermId) {
			let e = t.dataset.threadPermId;
			return 0 === e.indexOf("#") && (e = e.substring(1)),
			e
		}
		if (t.dataset && t.dataset.messageId) {
			let e = t.dataset.messageId;
			0 === e.indexOf("#") && (e = e.substring(1)),
			console.warn("GmailJS: Warning! Using DomEmail instance to lookup thread-ID. Attempting to resolve via cache, but there's no guarantee this will work!");
			t = v.cache.emailIdCache[e];
			return t && t.thread_id
		}
		return null
	},
	v.helper.clean_thread_id = function(e) {
		return e = e.startsWith("#") ? e.substring(1) : e
	},
	v.helper.get.email_source_pre = function(e) { ! e && v.check.is_inside_email() && (e = v.get.email_id());
		e = v.helper.get.legacy_email_id(e);
		return e ? window.location.origin + window.location.pathname + "?view=att&th=" + e + "&attid=0&disp=comp&safe=1&zw": null
	},
	v.get.email_source = function(e) {
		console.warn("Gmail.js: This function has been deprecated and will be removed in an upcoming release! Please migrate to email_source_async or email_source_promise!");
		e = v.helper.get.email_source_pre(e);
		return null !== e ? v.tools.make_request(e, "GET", !0) : ""
	},
	v.get.email_source_async = function(e, t, r, a) {
		v.get.email_source_promise(e, a).then(t).
		catch(r)
	},
	v.get.email_source_promise = function(e, t) {
		e = v.helper.get.email_source_pre(e);
		return null !== e ? v.tools.make_request_download_promise(e, t) : new Promise((e, t) = >{
			t("Unable to resolve URL for email source!")
		})
	},
	v.get.displayed_email_data = function() {
		var e = v.get.email_data();
		return (v.check.is_conversation_view() ? a: n)(e)
	},
	v.get.displayed_email_data_async = function(t) {
		v.get.email_data_async(void 0,
		function(e) {
			v.check.is_conversation_view() ? t(a(e)) : t(n(e))
		})
	};
	var a = function(e) {
		var t, r = e,
		a = r.threads,
		o = r.total_threads,
		n = 0 === (window.location.hash.split("#")[1] || "").indexOf("trash");
		for (t in a) {
			var i = a[t]; (n ? i.is_deleted: !i.is_deleted) || (delete a[t], o.splice(o.indexOf(t), 1), r.total_emails--)
		}
		return r
	},
	n = function(e) {
		var t, r = {};
		for (t in e.threads) if (document.querySelector("div[data-legacy-message-id='" + t + "']")) {
			var a = e.threads[t];
			r.first_email = t,
			r.last_email = t,
			r.subject = e.subject,
			r.threads = {},
			r.threads[t] = a,
			r.total_emails = 1,
			r.total_threads = [t],
			r.people_involved = [],
			r.people_involved.push([a.from, a.from_email]),
			a.to.forEach(function(e) {
				var t = v.tools.extract_email_address(e),
				e = v.tools.extract_name(e.replace(t, "")) || "";
				r.people_involved.push([e, t])
			});
			break
		}
		return r
	};
	v.check.is_conversation_view = function() {
		if (v.check.is_new_data_layer()) return - 1 !== v.tracker.globals[24].indexOf(7164);
		for (var e = void 0,
		t = v.tracker.globals[17][4][1], r = 0; r < t.length; r++) {
			var a = t[r];
			if ("bx_vmb" === a[0]) {
				e = a[1];
				break
			}
		}
		return "0" === e || void 0 === e
	},
	v.tools.extract_email_address = function(e) {
		e = e ? e.match(/[\+a-z0-9._-]+@[a-z0-9._-]+\.[a-z0-9._-]+/gi) : void 0;
		return e ? e[0] : void 0
	},
	v.tools.extract_name = function(e) {
		e = e ? e.match(/[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF"._\s-]+/gi) : void 0;
		return e && e[0] ? e[0].trim() : void 0
	},
	v.tools.i18n = function(e) {
		var t;
		switch (v.get.localization()) {
		case "fr":
			t = {
				inbox: "Boîte de réception",
				drafts: "Brouillons",
				spam: "Spam",
				forums: "Forums",
				updates: "Mises à jour",
				promotions: "Promotions",
				social_updates: "Réseaux sociaux"
			};
			break;
		case "no":
			t = {
				inbox: "Innboks",
				drafts: "Utkast",
				spam: "Søppelpost",
				forums: "Forumer",
				updates: "Oppdateringer",
				promotions: "Reklame",
				social_updates: "Sosialt"
			};
			break;
		case "nl":
			t = {
				inbox: "Postvak IN",
				drafts: "Concepten",
				spam: "Spam",
				forums: "Forums",
				updates: "Updates",
				promotions: "Reclame",
				social_updates: "Sociaal"
			};
			break;
		case "it":
			t = {
				inbox: "Posta in arrivo",
				drafts: "Bozza",
				spam: "Spam",
				forums: "Forum",
				updates: "Aggiornamenti",
				promotions: "Promozioni",
				social_updates: "Social"
			};
			break;
		case "en":
		default:
			t = {
				inbox: "Inbox",
				drafts: "Drafts",
				spam: "Spam",
				forums: "Forums",
				updates: "Updates",
				promotions: "Promotions",
				social_updates: "Social Updates"
			}
		}
		return t[e]
	};
	function i(e, t, r, a, o, n) {
		var i = u(document.createElement("div"));
		i.attr("class", "G-Ni J-J5-Ji");
		var s = u(document.createElement("div")),
		l = "T-I J-J5-Ji gmailjs ";
		return s.attr("class", l += null != o && "" !== o ? r + o: r + a),
		s.html(e),
		s.click(t),
		u(document.createElement("div")).attr("class", "asa"),
		i.html(s),
		n.append(i),
		i
	}
	return v.tools.add_toolbar_button = function(e, t, r) {
		return i(e, t, "lS ", "T-I-ax7 ar7", r, v.dom.toolbar())
	},
	v.tools.add_right_toolbar_button = function(e, t, r) {
		return i(e, t, "ash ", "T-I-ax7 L3", r, v.dom.right_toolbar())
	},
	v.tools.add_compose_button = function(e, t, r, a) {
		var o = u(document.createElement("div")),
		n = "T-I J-J5-Ji aoO T-I-atl L3 gmailjs gmailjscomposebutton ";
		return void 0 !== a && (n += a),
		o.attr("class", n),
		o.attr("style", "margin-left: 8px; max-width: 500px;"),
		o.html(t),
		o.click(r),
		e.find(".gU.Up  > .J-J5-Ji").append(o),
		o
	},
	v.tools.add_attachment_button = function(e, t, r, a, o) {
		var n = u(document.createElement("div"));
		n.attr("class", "T-I J-J5-Ji aQv T-I-ax7 L3"),
		n.attr("style", "user-select: none;"),
		n.attr("aria-label", a),
		n.attr("data-tooltip", a);
		n.mouseover(function() {
			this.classList.add("T-I-JW")
		}),
		n.mouseout(function() {
			this.classList.remove("T-I-JW")
		});
		var i = u(document.createElement("div")),
		a = "wtScjd J-J5-Ji aYr";
		return r && (a += " " + r),
		i.attr("class", a),
		t && i.html(t),
		n.append(i),
		n.click(o),
		e.$el.find("div.aQw").append(n),
		n
	},
	v.tools.remove_modal_window = function() {
		u("#gmailJsModalBackground").remove(),
		u("#gmailJsModalWindow").remove()
	},
	v.tools.add_modal_window = function(e, t, r, a, o, n, i) {
		o = o || v.tools.remove_modal_window,
		a = a || v.tools.remove_modal_window,
		n = n || "OK",
		i = i || "Cancel";
		var s = u(document.createElement("div"));
		s.attr("id", "gmailJsModalBackground"),
		s.attr("class", "Kj-JD-Jh"),
		s.attr("aria-hidden", "true"),
		s.attr("style", "opacity:0.75;width:100%;height:100%;");
		var l = u(document.createElement("div"));
		l.attr("id", "gmailJsModalWindow"),
		l.attr("class", "Kj-JD"),
		l.attr("tabindex", "0"),
		l.attr("role", "alertdialog"),
		l.attr("aria-labelledby", "gmailJsModalWindowTitle"),
		l.attr("style", "left:50%;top:50%;opacity:1;");
		var c = u(document.createElement("div"));
		c.attr("class", "Kj-JD-K7 Kj-JD-K7-GIHV4");
		var d = u(document.createElement("span"));
		d.attr("id", "gmailJsModalWindowTitle"),
		d.attr("class", "Kj-JD-K7-K0"),
		d.attr("role", "heading"),
		d.html(e);
		e = u(document.createElement("span"));
		e.attr("id", "gmailJsModalWindowClose"),
		e.attr("class", "Kj-JD-K7-Jq"),
		e.attr("role", "button"),
		e.attr("tabindex", "0"),
		e.attr("aria-label", "Close"),
		e.click(o),
		c.append(d),
		c.append(e);
		d = u(document.createElement("div"));
		d.attr("id", "gmailJsModalWindowContent"),
		d.attr("class", "Kj-JD-Jz"),
		d.html(t);
		e = u(document.createElement("div"));
		e.attr("class", "Kj-JD-Jl");
		t = u(document.createElement("button"));
		t.attr("id", "gmailJsModalWindowOk"),
		t.attr("class", "J-at1-auR J-at1-atl"),
		t.attr("name", "ok"),
		t.text(n),
		t.click(r);
		r = u(document.createElement("button"));
		r.attr("id", "gmailJsModalWindowCancel"),
		r.attr("name", "cancel"),
		r.text(i),
		r.click(a),
		e.append(t),
		e.append(r),
		l.append(c),
		l.append(d),
		l.append(e),
		u(document.body).append(s),
		u(document.body).append(l);
		s = function() {
			l.css({
				top: (u(window).height() - l.outerHeight()) / 2,
				left: (u(window).width() - l.outerWidth()) / 2
			})
		};
		s(),
		l.on("DOMSubtreeModified", s),
		u(window).resize(s)
	},
	v.tools.toggle_minimize = function() {
		var e = u("[alt='Minimize']")[0];
		return !! e && (e.click(), !0)
	},
	v.chat.is_hangouts = function() {
		if (void 0 !== v.tracker.hangouts) return v.tracker.hangouts;
		var e = u(".dw");
		if (1 < e.length) throw "Figuring out is hangouts - more than one dw classes found";
		if (0 === e.length) throw "Figuring out is hangouts - no dw classes found";
		e = e[0];
		return 0 < u(".nH.aJl.nn", e).length ? v.tracker.hangouts = !0 : 2 < u(".nH.nn", e).length ? v.tracker.hangouts = !1 : void 0
	},
	v.dom.visible_messages = function() {
		const n = [];
		return u('tbody>tr.zA[role="row"]:visible', v.dom.inbox_content()).each((e, t) = >{
			const r = u("*[email][name]", t);
			var a = u("*[role=link]", t),
			o = t.querySelector("span[data-thread-id]");
			n.push({
				from: {
					name: r.attr("name"),
					email: r.attr("email")
				},
				summary: a[0].innerText,
				thread_id: v.helper.clean_thread_id(o.dataset.threadId || ""),
				legacy_email_id: o.dataset.legacyMessageId,
				$el: u(t)
			})
		}),
		n
	},
	v.dom.composes = function() {
		var r = [];
		return u("div.M9").each(function(e, t) {
			r.push(new v.dom.compose(t))
		}),
		r
	},
	v.dom.helper = {},
	v.dom.helper.trigger_address = function(e) {
		let t = e[0];
		e = new KeyboardEvent("keydown", {
			bubbles: !0,
			cancelable: !0,
			key: "Tab",
			shiftKey: !0,
			keyCode: 9
		});
		t.focus(),
		t.dispatchEvent(e)
	},
	v.dom.compose = function(e) {
		return this.constructor !== v.dom.compose ? new v.dom.compose(e) : ((e = u(e)) && (e.hasClass("M9") || e.hasClass("AD")) || v.tools.error("api.dom.compose called with invalid element"), this.$el = e, this)
	},
	e(v.dom.compose.prototype, {
		id: function() {
			return this.dom("id").val()
		},
		email_id: function() {
			let e = this.dom("draft").val();
			return e && e.startsWith("#") ? e.substring(1) : e
		},
		thread_id: function() {
			var e = this.dom("thread").val() || "";
			return v.helper.clean_thread_id(e)
		},
		is_inline: function() {
			return 0 < this.$el.closest("td.Bu").length
		},
		recipients: function(r) {
			var e = (r = "object" != typeof r ? {}: r).type ? "[name=" + r.type + "]": "",
			a = r.flat ? [] : {
				to: [],
				cc: [],
				bcc: []
			};
			return this.$el.find(".GS input[type=hidden]" + e).each(function(e, t) {
				r.flat ? a.push(t.value) : (a[t.name] || (a[t.name] = []), a[t.name].push(t.value))
			}),
			a
		},
		to: function(e) {
			e = this.dom("to").val(e);
			return v.dom.helper.trigger_address(e),
			e
		},
		cc: function(e) {
			if (e) {
				const t = this.dom("show_cc");
				t.click()
			}
			e = this.dom("cc").val(e);
			return v.dom.helper.trigger_address(e),
			e
		},
		bcc: function(e) {
			if (e) {
				const t = this.dom("show_bcc");
				t.click()
			}
			e = this.dom("bcc").val(e);
			return v.dom.helper.trigger_address(e),
			e
		},
		subject: function(e) {
			return e && this.dom("all_subjects").val(e),
			(e = this.dom("subjectbox").val()) || this.dom("subject").val()
		},
		from: function() {
			var e = this.dom("from");
			if (e.length) {
				e = e.val();
				if (e) return v.tools.extract_email_address(e)
			}
			return v.get.user_email()
		},
		body: function(e) {
			var t = this.dom("body");
			return e && t.html(e),
			t.html()
		},
		send: function() {
			return this.dom("send_button").click()
		},
		find: function(e) {
			return this.$el.find(e)
		},
		close: function() {
			const e = document.createEvent("Events");
			e.initEvent("keydown", !0, !0),
			e.which = 27,
			e.keyCode = 27;
			var t = this.dom("body");
			t.focus(),
			t[0].dispatchEvent(e)
		},
		dom: function(e) {
			if (!e) return this.$el;
			var t = {
				to: "textarea[name=to]",
				cc: "textarea[name=cc]",
				bcc: "textarea[name=bcc]",
				id: "input[name=composeid]",
				draft: "input[name=draft]",
				thread: "input[name=rt]",
				subject: "input[name=subject]",
				subjectbox: "input[name=subjectbox]",
				all_subjects: "input[name=subjectbox], input[name=subject]",
				body: "div[contenteditable=true]",
				quoted_reply: "input[name=uet]",
				reply: "M9",
				forward: "M9",
				from: "input[name=from]",
				send_button: "div.T-I.T-I-atl:not(.gmailjscomposebutton)",
				show_cc: "span.aB.gQ.pE",
				show_bcc: "span.aB.gQ.pB"
			};
			return t[e] || v.tools.error('Dom lookup failed. Unable to find config for "' + e + '"', t, e, t[e]),
			this.$el.find(t[e])
		}
	}),
	v.dom.email = function(e) {
		return this.constructor !== v.dom.email ? new v.dom.email(e) : ("string" == typeof e && v.check.data.is_legacy_email_id(e) ? (this.id = e, this.$el = u("div.adn[data-legacy-message-id='" + this.id + "']")) : "string" == typeof e && v.check.data.is_email_id(e) ? (t = document.querySelector("div.adn[data-message-id='" + e.replace("msg-f:", "\\#msg-f\\:") + "']"), this.id = t.dataset.legacyMessageId, this.$el = u(t)) : e && (e.classList && e.classList.contains("adn") || e.hasClass && e.hasClass("adn")) ? (this.$el = u(e), this.id = this.$el.data("legacyMessageId")) : v.tools.error("api.dom.email called with invalid element/id"), this);
		var t
	}, e(v.dom.email.prototype, {
		body: function(e) {
			var t = this.dom("body");
			return e && t.html(e),
			t.html()
		},
		from: function(e, t) {
			var r = this.dom("from");
			return e && r.attr("email", e),
			t && (r.attr("name", t), r.html(t)),
			{
				email: r.attr("email"),
				name: r.attr("name"),
				el: r
			}
		},
		to: function(e) {
			var r;
			e && (u.isArray(e) || (e = [e]), r = [], u.each(e,
			function(e, t) {
				r.push(u("<span />").attr({
					dir: "ltr",
					email: t.email,
					name: t.name
				}).addClass("g2").html(t.name).wrap("<p/>").parent().html())
			}), this.dom("to_wrapper").html("to " + r.join(", ")));
			var t = [];
			return this.dom("to").each(function() {
				var e = u(this);
				t.push({
					email: e.attr("email"),
					name: e.attr("name"),
					el: e
				})
			}),
			t
		},
		attachments: function() {
			var r = [];
			return this.dom("attachments").each(function() {
				var e = u(this),
				t = {};
				t.$el = e,
				t.name = e.find(".aV3").html(),
				t.size = e.find(".SaH2Ve").html();
				e = e.attr("download_url");
				e && (e = v.tools.parse_attachment_url(e), t.url = e.url, t.type = e.type),
				r.push(t)
			}),
			r
		},
		data: function() {
			var e;
			return "object" != typeof v.dom.email_cache && (v.dom.email_cache = {}),
			v.dom.email_cache[this.id] || (e = v.get.email_data(this.id), u.each(e.threads,
			function(e, t) {
				v.dom.email_cache[e] = t
			})),
			v.dom.email_cache[this.id]
		},
		source: function() {
			return v.get.email_source(this.id)
		},
		dom: function(e) {
			if (!e) return this.$el;
			var t = {
				body: "div.a3s",
				from: "span[email].gD",
				to: "span[email].g2",
				to_wrapper: "span.hb",
				timestamp: "span.g3",
				star: "div.zd",
				attachments: "div.hq.gt div.aQH span.aZo",
				reply_button: "div[role=button].aaq",
				menu_button: "div[role=button].aap",
				details_button: "div[role=button].ajz"
			};
			return t[e] || v.tools.error('Dom lookup failed. Unable to find config for "' + e + '"'),
			this.$el.find(t[e])
		}
	}),
	v.dom.thread = function(e) {
		return this.constructor !== v.dom.thread ? new v.dom.thread(e) : (e && e.hasClass("if") || v.tools.error("api.dom.thread called with invalid element/id"), this.$el = e, this)
	},
	e(v.dom.thread.prototype, {
		dom: function(e) {
			if (!e) return this.$el;
			var t = {
				opened_email: "div.adn",
				subject: "h2.hP",
				labels: "div.hN"
			};
			return t[e] || v.tools.error('Dom lookup failed. Unable to find config for "' + e + '"'),
			this.$el.find(t[e])
		}
	}),
	v.compose.start_compose = function() {
		var e = document.getElementsByClassName("T-I T-I-KE L3")[0];
		return !! e && (e.click(), !0)
	},
	v.old = {},
	v.old.get = v.get,
	v.new = {},
	v.new.get = {},
	v.new.get.email_id = function(e) {
		if (!e) {
			var t = document.querySelectorAll(".adn[data-message-id]");
			if (!t || 0 === t.length) return null;
			e = t[t.length - 1]
		}
		return v.helper.get.new_email_id(e)
	},
	v.new.get.thread_id = function() {
		var e = document.querySelector("[data-thread-perm-id]");
		return e ? e.dataset.threadPermId: null
	},
	v.new.get.email_data = function(e) {
		e = e || v.new.get.email_id();
		e = v.helper.get.new_email_id(e);
		return e ? v.cache.emailIdCache[e] : null
	},
	v.new.get.thread_data = function(e) {
		e = e || v.new.get.thread_id();
		e = v.helper.get.thread_id(e);
		return e ? v.cache.threadCache[e] : null
	},
	"undefined" != typeof document && v.tools.xhr_watcher(),
	"undefined" != typeof document && v.tools.embedded_data_watcher(),
	v
};
"undefined" != typeof exports && (exports.Gmail = Gmail);